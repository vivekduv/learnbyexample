<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:camel="http://camel.apache.org/schema/spring"
       xsi:schemaLocation="http://www.springframework.org/schema/beans      http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
    http://www.springframework.org/schema/context    http://www.springframework.org/schema/context/spring-context-3.2.xsd
    http://camel.apache.org/schema/spring            http://camel.apache.org/schema/spring/camel-spring.xsd">


<context:annotation-config/>
    <context:component-scan base-package="org.learnbyexample.camel.routes"/>
    <context:property-placeholder location="app.properties"/>

    <camel:camelContext xmlns="http://camel.apache.org/schema/spring" id="camel">
        <contextScan />

    </camel:camelContext>
    <bean id="kafkaComponent" class="org.apache.camel.component.kafka.KafkaComponent">
        <property name="configuration"  ref="kafkaConfig"/>
    </bean>

    <bean id="kafkaConfig" class="org.apache.camel.component.kafka.KafkaConfiguration" >
        <property name="brokers" value="${spring.kafka.bootstrap-servers}"/>
    </bean>

    <bean id="idempotentRepository" class="org.apache.camel.support.processor.idempotent.FileIdempotentRepository">
        <property name="fileStore">
            <bean class="java.io.File">
                <constructor-arg value="${file.idempotent.repository}"/>
            </bean>
        </property>
        <property name="maxFileStoreSize" value="10000000"/>
        <property name="cacheSize" value="10000"/>
    </bean>

</beans>